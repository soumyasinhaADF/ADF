{
	"name": "DataFlowXMLtoTABLE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataSetSourceXML",
						"type": "DatasetReference"
					},
					"name": "sourceXML1"
				},
				{
					"dataset": {
						"referenceName": "DataSetSourceXML",
						"type": "DatasetReference"
					},
					"name": "sourceXML2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataSetXMLtoSQLEntity",
						"type": "DatasetReference"
					},
					"name": "sinkEntity"
				},
				{
					"dataset": {
						"referenceName": "DataSetXMLtoSQLIndividual",
						"type": "DatasetReference"
					},
					"name": "sinkXMLIndividual"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "flatten3"
				},
				{
					"name": "flatten4"
				},
				{
					"name": "flatten5"
				},
				{
					"name": "flatten6"
				},
				{
					"name": "flatten7"
				},
				{
					"name": "flatten8"
				},
				{
					"name": "flatten9"
				},
				{
					"name": "flatten10"
				},
				{
					"name": "flatten11"
				},
				{
					"name": "flatten12"
				},
				{
					"name": "flatten13"
				},
				{
					"name": "flatten14"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CONSOLIDATED_LIST as ({@dateGenerated} as string, ENTITIES as (ENTITY as (COMMENTS1 as string, DATAID as integer, ENTITY_ADDRESS as (CITY as string, COUNTRY as string, NOTE as string, STATE_PROVINCE as string, STREET as string, ZIP_CODE as string, {_value_} as string)[], ENTITY_ALIAS as (ALIAS_NAME as string, QUALITY as string)[], FIRST_NAME as string, LAST_DAY_UPDATED as (VALUE as date[]), LISTED_ON as string, LIST_TYPE as (VALUE as string), NAME_ORIGINAL_SCRIPT as string, REFERENCE_NUMBER as string, SORT_KEY as string, SORT_KEY_LAST_MOD as string, SUBMITTED_ON as date, UN_LIST_TYPE as string, VERSIONNUM as boolean)[]), INDIVIDUALS as (INDIVIDUAL as (COMMENTS1 as string, DATAID as integer, DESIGNATION as (VALUE as string[]), FIRST_NAME as string, FOURTH_NAME as string, GENDER as string, INDIVIDUAL_ADDRESS as (CITY as string, COUNTRY as string, NOTE as string, STATE_PROVINCE as string, STREET as string, ZIP_CODE as integer)[], INDIVIDUAL_ALIAS as (ALIAS_NAME as string, CITY_OF_BIRTH as string, COUNTRY_OF_BIRTH as string, DATE_OF_BIRTH as string, NOTE as string, QUALITY as string)[], INDIVIDUAL_DATE_OF_BIRTH as (DATE as string, FROM_YEAR as short, NOTE as string, TO_YEAR as short, TYPE_OF_DATE as string, YEAR as short)[], INDIVIDUAL_DOCUMENT as (CITY_OF_ISSUE as string, COUNTRY_OF_ISSUE as string, DATE_OF_ISSUE as date, ISSUING_COUNTRY as string, NOTE as string, NUMBER as string, TYPE_OF_DOCUMENT as string, TYPE_OF_DOCUMENT2 as string, {_value_} as string)[], INDIVIDUAL_PLACE_OF_BIRTH as (CITY as string, COUNTRY as string, NOTE as string, STATE_PROVINCE as string, {_value_} as string)[], LAST_DAY_UPDATED as (VALUE as date[]), LISTED_ON as string, LIST_TYPE as (VALUE as string), NAME_ORIGINAL_SCRIPT as string, NATIONALITY as (VALUE as string[]), REFERENCE_NUMBER as string, SECOND_NAME as string, SORT_KEY as string, SORT_KEY_LAST_MOD as string, SUBMITTED_BY as string, THIRD_NAME as string, TITLE as (VALUE as string[]), UN_LIST_TYPE as string, VERSIONNUM as boolean)[]))",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     validationMode: 'none',",
				"     namespaces: true,",
				"     partitionBy('hash', 1)) ~> sourceXML1",
				"source(output(",
				"          CONSOLIDATED_LIST as ({@dateGenerated} as string, ENTITIES as (ENTITY as (COMMENTS1 as string, DATAID as integer, ENTITY_ADDRESS as (CITY as string, COUNTRY as string, NOTE as string, STATE_PROVINCE as string, STREET as string, ZIP_CODE as string, {_value_} as string)[], ENTITY_ALIAS as (ALIAS_NAME as string, QUALITY as string)[], FIRST_NAME as string, LAST_DAY_UPDATED as (VALUE as date[]), LISTED_ON as string, LIST_TYPE as (VALUE as string), NAME_ORIGINAL_SCRIPT as string, REFERENCE_NUMBER as string, SORT_KEY as string, SORT_KEY_LAST_MOD as string, SUBMITTED_ON as date, UN_LIST_TYPE as string, VERSIONNUM as boolean)[]), INDIVIDUALS as (INDIVIDUAL as (COMMENTS1 as string, DATAID as integer, DESIGNATION as (VALUE as string[]), FIRST_NAME as string, FOURTH_NAME as string, GENDER as string, INDIVIDUAL_ADDRESS as (CITY as string, COUNTRY as string, NOTE as string, STATE_PROVINCE as string, STREET as string, ZIP_CODE as integer)[], INDIVIDUAL_ALIAS as (ALIAS_NAME as string, CITY_OF_BIRTH as string, COUNTRY_OF_BIRTH as string, DATE_OF_BIRTH as string, NOTE as string, QUALITY as string)[], INDIVIDUAL_DATE_OF_BIRTH as (DATE as string, FROM_YEAR as short, NOTE as string, TO_YEAR as short, TYPE_OF_DATE as string, YEAR as short)[], INDIVIDUAL_DOCUMENT as (CITY_OF_ISSUE as string, COUNTRY_OF_ISSUE as string, DATE_OF_ISSUE as date, ISSUING_COUNTRY as string, NOTE as string, NUMBER as string, TYPE_OF_DOCUMENT as string, TYPE_OF_DOCUMENT2 as string, {_value_} as string)[], INDIVIDUAL_PLACE_OF_BIRTH as (CITY as string, COUNTRY as string, NOTE as string, STATE_PROVINCE as string, {_value_} as string)[], LAST_DAY_UPDATED as (VALUE as date[]), LISTED_ON as string, LIST_TYPE as (VALUE as string), NAME_ORIGINAL_SCRIPT as string, NATIONALITY as (VALUE as string[]), REFERENCE_NUMBER as string, SECOND_NAME as string, SORT_KEY as string, SORT_KEY_LAST_MOD as string, SUBMITTED_BY as string, THIRD_NAME as string, TITLE as (VALUE as string[]), UN_LIST_TYPE as string, VERSIONNUM as boolean)[]))",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     validationMode: 'none',",
				"     namespaces: true,",
				"     partitionBy('hash', 1)) ~> sourceXML2",
				"sourceXML1 foldDown(unroll(CONSOLIDATED_LIST.ENTITIES.ENTITY),",
				"     mapColumn(",
				"          COMMENTS1 = CONSOLIDATED_LIST.ENTITIES.ENTITY.COMMENTS1,",
				"          DATAID = CONSOLIDATED_LIST.ENTITIES.ENTITY.DATAID,",
				"          ENTITY_ADDRESS = CONSOLIDATED_LIST.ENTITIES.ENTITY.ENTITY_ADDRESS,",
				"          ENTITY_ALIAS = CONSOLIDATED_LIST.ENTITIES.ENTITY.ENTITY_ALIAS,",
				"          FIRST_NAME = CONSOLIDATED_LIST.ENTITIES.ENTITY.FIRST_NAME,",
				"          LAST_DAY_UPDATED = CONSOLIDATED_LIST.ENTITIES.ENTITY.LAST_DAY_UPDATED,",
				"          LISTED_ON = CONSOLIDATED_LIST.ENTITIES.ENTITY.LISTED_ON,",
				"          LIST_TYPE = CONSOLIDATED_LIST.ENTITIES.ENTITY.LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT = CONSOLIDATED_LIST.ENTITIES.ENTITY.NAME_ORIGINAL_SCRIPT,",
				"          REFERENCE_NUMBER = CONSOLIDATED_LIST.ENTITIES.ENTITY.REFERENCE_NUMBER,",
				"          SORT_KEY = CONSOLIDATED_LIST.ENTITIES.ENTITY.SORT_KEY,",
				"          SORT_KEY_LAST_MOD = CONSOLIDATED_LIST.ENTITIES.ENTITY.SORT_KEY_LAST_MOD,",
				"          SUBMITTED_ON = CONSOLIDATED_LIST.ENTITIES.ENTITY.SUBMITTED_ON,",
				"          UN_LIST_TYPE = CONSOLIDATED_LIST.ENTITIES.ENTITY.UN_LIST_TYPE,",
				"          VERSIONNUM = CONSOLIDATED_LIST.ENTITIES.ENTITY.VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 foldDown(unroll(ENTITY_ADDRESS),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          CITY = ENTITY_ADDRESS.CITY,",
				"          COUNTRY = ENTITY_ADDRESS.COUNTRY,",
				"          NOTE = ENTITY_ADDRESS.NOTE,",
				"          STATE_PROVINCE = ENTITY_ADDRESS.STATE_PROVINCE,",
				"          STREET = ENTITY_ADDRESS.STREET,",
				"          ZIP_CODE = ENTITY_ADDRESS.ZIP_CODE,",
				"          ENTITY_ALIAS,",
				"          FIRST_NAME,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          REFERENCE_NUMBER,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_ON,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"flatten2 foldDown(unroll(ENTITY_ALIAS),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          CITY,",
				"          COUNTRY,",
				"          NOTE,",
				"          STATE_PROVINCE,",
				"          STREET,",
				"          ZIP_CODE,",
				"          ALIAS_NAME = ENTITY_ALIAS.ALIAS_NAME,",
				"          QUALITY = ENTITY_ALIAS.QUALITY,",
				"          FIRST_NAME,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          REFERENCE_NUMBER,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_ON,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten3",
				"flatten3 foldDown(unroll(LAST_DAY_UPDATED.VALUE),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          CITY,",
				"          COUNTRY,",
				"          NOTE,",
				"          STATE_PROVINCE,",
				"          STREET,",
				"          ZIP_CODE,",
				"          ALIAS_NAME,",
				"          QUALITY,",
				"          FIRST_NAME,",
				"          LAST_DAY_UPDATED_VALUE = LAST_DAY_UPDATED.VALUE,",
				"          LISTED_ON,",
				"          LIST_TYPE = LIST_TYPE.VALUE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          REFERENCE_NUMBER,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_ON,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten4",
				"sourceXML2 foldDown(unroll(CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL),",
				"     mapColumn(",
				"          COMMENTS1 = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.COMMENTS1,",
				"          DATAID = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.DATAID,",
				"          DESIGNATION = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.DESIGNATION,",
				"          FIRST_NAME = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.FIRST_NAME,",
				"          FOURTH_NAME = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.FOURTH_NAME,",
				"          GENDER = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.GENDER,",
				"          INDIVIDUAL_ADDRESS = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.INDIVIDUAL_ADDRESS,",
				"          INDIVIDUAL_ALIAS = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.INDIVIDUAL_ALIAS,",
				"          INDIVIDUAL_DATE_OF_BIRTH = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.INDIVIDUAL_DATE_OF_BIRTH,",
				"          INDIVIDUAL_DOCUMENT = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.INDIVIDUAL_DOCUMENT,",
				"          INDIVIDUAL_PLACE_OF_BIRTH = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.INDIVIDUAL_PLACE_OF_BIRTH,",
				"          LAST_DAY_UPDATED = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.LAST_DAY_UPDATED,",
				"          LISTED_ON = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.LISTED_ON,",
				"          LIST_TYPE = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.NATIONALITY,",
				"          REFERENCE_NUMBER = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.REFERENCE_NUMBER,",
				"          SECOND_NAME = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.SECOND_NAME,",
				"          SORT_KEY = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.SORT_KEY,",
				"          SORT_KEY_LAST_MOD = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.SUBMITTED_BY,",
				"          THIRD_NAME = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.THIRD_NAME,",
				"          TITLE = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.TITLE,",
				"          UN_LIST_TYPE = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.UN_LIST_TYPE,",
				"          VERSIONNUM = CONSOLIDATED_LIST.INDIVIDUALS.INDIVIDUAL.VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten5",
				"flatten5 foldDown(unroll(DESIGNATION.VALUE),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION = DESIGNATION.VALUE,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          INDIVIDUAL_ADDRESS,",
				"          INDIVIDUAL_ALIAS,",
				"          INDIVIDUAL_DATE_OF_BIRTH,",
				"          INDIVIDUAL_DOCUMENT,",
				"          INDIVIDUAL_PLACE_OF_BIRTH,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten6",
				"flatten6 foldDown(unroll(INDIVIDUAL_ADDRESS),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET = INDIVIDUAL_ADDRESS.STREET,",
				"          CITY = INDIVIDUAL_ADDRESS.CITY,",
				"          STATE_PROVINCE = INDIVIDUAL_ADDRESS.STATE_PROVINCE,",
				"          ZIP_CODE = INDIVIDUAL_ADDRESS.ZIP_CODE,",
				"          COUNTRY = INDIVIDUAL_ADDRESS.COUNTRY,",
				"          NOTE = INDIVIDUAL_ADDRESS.NOTE,",
				"          INDIVIDUAL_ALIAS,",
				"          INDIVIDUAL_DATE_OF_BIRTH,",
				"          INDIVIDUAL_DOCUMENT,",
				"          INDIVIDUAL_PLACE_OF_BIRTH,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten7",
				"flatten7 foldDown(unroll(INDIVIDUAL_ALIAS),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET,",
				"          CITY,",
				"          STATE_PROVINCE,",
				"          ZIP_CODE,",
				"          COUNTRY,",
				"          NOTE,",
				"          ALIAS_NAME = INDIVIDUAL_ALIAS.ALIAS_NAME,",
				"          CITY_OF_BIRTH = INDIVIDUAL_ALIAS.CITY_OF_BIRTH,",
				"          COUNTRY_OF_BIRTH = INDIVIDUAL_ALIAS.COUNTRY_OF_BIRTH,",
				"          DATE_OF_BIRTH = INDIVIDUAL_ALIAS.DATE_OF_BIRTH,",
				"          ALIAS_NOTE = INDIVIDUAL_ALIAS.NOTE,",
				"          QUALITY = INDIVIDUAL_ALIAS.QUALITY,",
				"          INDIVIDUAL_DATE_OF_BIRTH,",
				"          INDIVIDUAL_DOCUMENT,",
				"          INDIVIDUAL_PLACE_OF_BIRTH,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten8",
				"flatten8 foldDown(unroll(INDIVIDUAL_DATE_OF_BIRTH),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET,",
				"          CITY,",
				"          STATE_PROVINCE,",
				"          ZIP_CODE,",
				"          COUNTRY,",
				"          NOTE,",
				"          ALIAS_NAME,",
				"          CITY_OF_BIRTH,",
				"          COUNTRY_OF_BIRTH,",
				"          DATE_OF_BIRTH,",
				"          ALIAS_NOTE,",
				"          QUALITY,",
				"          DATE = INDIVIDUAL_DATE_OF_BIRTH.DATE,",
				"          FROM_YEAR = INDIVIDUAL_DATE_OF_BIRTH.FROM_YEAR,",
				"          TO_YEAR = INDIVIDUAL_DATE_OF_BIRTH.TO_YEAR,",
				"          TYPE_OF_DATE = INDIVIDUAL_DATE_OF_BIRTH.TYPE_OF_DATE,",
				"          YEAR = INDIVIDUAL_DATE_OF_BIRTH.YEAR,",
				"          DOB_NOTE = INDIVIDUAL_DATE_OF_BIRTH.NOTE,",
				"          INDIVIDUAL_DOCUMENT,",
				"          INDIVIDUAL_PLACE_OF_BIRTH,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten9",
				"flatten9 foldDown(unroll(INDIVIDUAL_DOCUMENT),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET,",
				"          CITY,",
				"          STATE_PROVINCE,",
				"          ZIP_CODE,",
				"          COUNTRY,",
				"          NOTE,",
				"          ALIAS_NAME,",
				"          CITY_OF_BIRTH,",
				"          COUNTRY_OF_BIRTH,",
				"          DATE_OF_BIRTH,",
				"          ALIAS_NOTE,",
				"          QUALITY,",
				"          DATE,",
				"          FROM_YEAR,",
				"          TO_YEAR,",
				"          TYPE_OF_DATE,",
				"          YEAR,",
				"          DOB_NOTE,",
				"          TYPE_OF_DOCUMENT = INDIVIDUAL_DOCUMENT.TYPE_OF_DOCUMENT,",
				"          TYPE_OF_DOCUMENT2 = INDIVIDUAL_DOCUMENT.TYPE_OF_DOCUMENT2,",
				"          NUMBER = INDIVIDUAL_DOCUMENT.NUMBER,",
				"          DATE_OF_ISSUE = INDIVIDUAL_DOCUMENT.DATE_OF_ISSUE,",
				"          CITY_OF_ISSUE = INDIVIDUAL_DOCUMENT.CITY_OF_ISSUE,",
				"          COUNTRY_OF_ISSUE = INDIVIDUAL_DOCUMENT.COUNTRY_OF_ISSUE,",
				"          ISSUING_COUNTRY = INDIVIDUAL_DOCUMENT.ISSUING_COUNTRY,",
				"          DOCUMENT_NOTE = INDIVIDUAL_DOCUMENT.NOTE,",
				"          INDIVIDUAL_PLACE_OF_BIRTH,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten10",
				"flatten10 foldDown(unroll(INDIVIDUAL_PLACE_OF_BIRTH),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET,",
				"          CITY,",
				"          STATE_PROVINCE,",
				"          ZIP_CODE,",
				"          COUNTRY,",
				"          NOTE,",
				"          ALIAS_NAME,",
				"          CITY_OF_BIRTH,",
				"          COUNTRY_OF_BIRTH,",
				"          DATE_OF_BIRTH,",
				"          ALIAS_NOTE,",
				"          QUALITY,",
				"          DATE,",
				"          FROM_YEAR,",
				"          TO_YEAR,",
				"          TYPE_OF_DATE,",
				"          YEAR,",
				"          DOB_NOTE,",
				"          TYPE_OF_DOCUMENT,",
				"          TYPE_OF_DOCUMENT2,",
				"          NUMBER,",
				"          DATE_OF_ISSUE,",
				"          CITY_OF_ISSUE,",
				"          COUNTRY_OF_ISSUE,",
				"          ISSUING_COUNTRY,",
				"          DOCUMENT_NOTE,",
				"          POB_CITY = INDIVIDUAL_PLACE_OF_BIRTH.CITY,",
				"          POB_STATE_PROVINCE = INDIVIDUAL_PLACE_OF_BIRTH.STATE_PROVINCE,",
				"          POB_COUNTRY = INDIVIDUAL_PLACE_OF_BIRTH.COUNTRY,",
				"          POB_NOTE = INDIVIDUAL_PLACE_OF_BIRTH.NOTE,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten11",
				"flatten11 foldDown(unroll(LAST_DAY_UPDATED.VALUE),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET,",
				"          CITY,",
				"          STATE_PROVINCE,",
				"          ZIP_CODE,",
				"          COUNTRY,",
				"          NOTE,",
				"          ALIAS_NAME,",
				"          CITY_OF_BIRTH,",
				"          COUNTRY_OF_BIRTH,",
				"          DATE_OF_BIRTH,",
				"          ALIAS_NOTE,",
				"          QUALITY,",
				"          DATE,",
				"          FROM_YEAR,",
				"          TO_YEAR,",
				"          TYPE_OF_DATE,",
				"          YEAR,",
				"          DOB_NOTE,",
				"          TYPE_OF_DOCUMENT,",
				"          TYPE_OF_DOCUMENT2,",
				"          NUMBER,",
				"          DATE_OF_ISSUE,",
				"          CITY_OF_ISSUE,",
				"          COUNTRY_OF_ISSUE,",
				"          ISSUING_COUNTRY,",
				"          DOCUMENT_NOTE,",
				"          POB_CITY,",
				"          POB_STATE_PROVINCE,",
				"          POB_COUNTRY,",
				"          POB_NOTE,",
				"          LAST_DAY_UPDATED = LAST_DAY_UPDATED.VALUE,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten12",
				"flatten12 foldDown(unroll(NATIONALITY.VALUE),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET,",
				"          CITY,",
				"          STATE_PROVINCE,",
				"          ZIP_CODE,",
				"          COUNTRY,",
				"          NOTE,",
				"          ALIAS_NAME,",
				"          CITY_OF_BIRTH,",
				"          COUNTRY_OF_BIRTH,",
				"          DATE_OF_BIRTH,",
				"          ALIAS_NOTE,",
				"          QUALITY,",
				"          DATE,",
				"          FROM_YEAR,",
				"          TO_YEAR,",
				"          TYPE_OF_DATE,",
				"          YEAR,",
				"          DOB_NOTE,",
				"          TYPE_OF_DOCUMENT,",
				"          TYPE_OF_DOCUMENT2,",
				"          NUMBER,",
				"          DATE_OF_ISSUE,",
				"          CITY_OF_ISSUE,",
				"          COUNTRY_OF_ISSUE,",
				"          ISSUING_COUNTRY,",
				"          DOCUMENT_NOTE,",
				"          POB_CITY,",
				"          POB_STATE_PROVINCE,",
				"          POB_COUNTRY,",
				"          POB_NOTE,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE = LIST_TYPE.VALUE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY = NATIONALITY.VALUE,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten13",
				"flatten13 foldDown(unroll(TITLE.VALUE),",
				"     mapColumn(",
				"          COMMENTS1,",
				"          DATAID,",
				"          DESIGNATION,",
				"          FIRST_NAME,",
				"          FOURTH_NAME,",
				"          GENDER,",
				"          STREET,",
				"          CITY,",
				"          STATE_PROVINCE,",
				"          ZIP_CODE,",
				"          COUNTRY,",
				"          NOTE,",
				"          ALIAS_NAME,",
				"          CITY_OF_BIRTH,",
				"          COUNTRY_OF_BIRTH,",
				"          DATE_OF_BIRTH,",
				"          ALIAS_NOTE,",
				"          QUALITY,",
				"          DATE,",
				"          FROM_YEAR,",
				"          TO_YEAR,",
				"          TYPE_OF_DATE,",
				"          YEAR,",
				"          DOB_NOTE,",
				"          TYPE_OF_DOCUMENT,",
				"          TYPE_OF_DOCUMENT2,",
				"          NUMBER,",
				"          DATE_OF_ISSUE,",
				"          CITY_OF_ISSUE,",
				"          COUNTRY_OF_ISSUE,",
				"          ISSUING_COUNTRY,",
				"          DOCUMENT_NOTE,",
				"          POB_CITY,",
				"          POB_STATE_PROVINCE,",
				"          POB_COUNTRY,",
				"          POB_NOTE,",
				"          LAST_DAY_UPDATED,",
				"          LISTED_ON,",
				"          LIST_TYPE,",
				"          NAME_ORIGINAL_SCRIPT,",
				"          NATIONALITY,",
				"          REFERENCE_NUMBER,",
				"          SECOND_NAME,",
				"          SORT_KEY,",
				"          SORT_KEY_LAST_MOD,",
				"          SUBMITTED_BY,",
				"          THIRD_NAME,",
				"          TITLE = TITLE.VALUE,",
				"          UN_LIST_TYPE,",
				"          VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten14",
				"flatten4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PROPERTY_1 as string,",
				"          PROPERTY_2 as string,",
				"          PROPERTY_3 as string,",
				"          PROPERTY_4 as string,",
				"          PROPERTY_5 as string,",
				"          PROPERTY_6 as string,",
				"          PROPERTY_7 as string,",
				"          PROPERTY_8 as string,",
				"          PROPERTY_9 as string,",
				"          PROPERTY_10 as string,",
				"          PROPERTY_11 as string,",
				"          PROPERTY_12 as string,",
				"          PROPERTY_13 as string,",
				"          PROPERTY_14 as string,",
				"          PROPERTY_15 as string,",
				"          PROPERTY_16 as string,",
				"          PROPERTY_17 as string,",
				"          PROPERTY_18 as string,",
				"          PROPERTY_19 as string,",
				"          PROPERTY_20 as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['TRUNCATE TABLE XML_TO_TABLE_ENTITY'],",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          PROPERTY_1 = DATAID,",
				"          PROPERTY_2 = FIRST_NAME,",
				"          PROPERTY_3 = ALIAS_NAME,",
				"          PROPERTY_4 = STREET,",
				"          PROPERTY_5 = CITY,",
				"          PROPERTY_6 = STATE_PROVINCE,",
				"          PROPERTY_7 = COUNTRY,",
				"          PROPERTY_8 = NOTE,",
				"          PROPERTY_9 = COMMENTS1,",
				"          PROPERTY_10 = QUALITY,",
				"          PROPERTY_11 = LISTED_ON,",
				"          PROPERTY_12 = LIST_TYPE,",
				"          PROPERTY_13 = LAST_DAY_UPDATED_VALUE,",
				"          PROPERTY_14 = NAME_ORIGINAL_SCRIPT,",
				"          PROPERTY_15 = REFERENCE_NUMBER,",
				"          PROPERTY_16 = SORT_KEY,",
				"          PROPERTY_17 = SORT_KEY_LAST_MOD,",
				"          PROPERTY_18 = SUBMITTED_ON,",
				"          PROPERTY_19 = UN_LIST_TYPE,",
				"          PROPERTY_20 = VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkEntity",
				"flatten14 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PROPERTY_1 as string,",
				"          PROPERTY_2 as string,",
				"          PROPERTY_3 as string,",
				"          PROPERTY_4 as string,",
				"          PROPERTY_5 as string,",
				"          PROPERTY_6 as string,",
				"          PROPERTY_7 as string,",
				"          PROPERTY_8 as string,",
				"          PROPERTY_9 as string,",
				"          PROPERTY_10 as string,",
				"          PROPERTY_11 as string,",
				"          PROPERTY_12 as string,",
				"          PROPERTY_13 as string,",
				"          PROPERTY_14 as string,",
				"          PROPERTY_15 as string,",
				"          PROPERTY_16 as string,",
				"          PROPERTY_17 as string,",
				"          PROPERTY_18 as string,",
				"          PROPERTY_19 as string,",
				"          PROPERTY_20 as string,",
				"          PROPERTY_21 as string,",
				"          PROPERTY_22 as string,",
				"          PROPERTY_23 as string,",
				"          PROPERTY_24 as string,",
				"          PROPERTY_25 as string,",
				"          PROPERTY_26 as string,",
				"          PROPERTY_27 as string,",
				"          PROPERTY_28 as string,",
				"          PROPERTY_29 as string,",
				"          PROPERTY_30 as string,",
				"          PROPERTY_31 as string,",
				"          PROPERTY_32 as string,",
				"          PROPERTY_33 as string,",
				"          PROPERTY_34 as string,",
				"          PROPERTY_35 as string,",
				"          PROPERTY_36 as string,",
				"          PROPERTY_37 as string,",
				"          PROPERTY_38 as string,",
				"          PROPERTY_39 as string,",
				"          PROPERTY_40 as string,",
				"          PROPERTY_41 as string,",
				"          PROPERTY_42 as string,",
				"          PROPERTY_43 as string,",
				"          PROPERTY_44 as string,",
				"          PROPERTY_45 as string,",
				"          PROPERTY_46 as string,",
				"          PROPERTY_47 as string,",
				"          PROPERTY_48 as string,",
				"          PROPERTY_49 as string,",
				"          PROPERTY_50 as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['TRUNCATE TABLE XML_TO_TABLE_INDIVIDUAL'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          PROPERTY_1 = DATAID,",
				"          PROPERTY_2 = FIRST_NAME,",
				"          PROPERTY_3 = SECOND_NAME,",
				"          PROPERTY_4 = THIRD_NAME,",
				"          PROPERTY_5 = FOURTH_NAME,",
				"          PROPERTY_6 = COMMENTS1,",
				"          PROPERTY_7 = DESIGNATION,",
				"          PROPERTY_8 = GENDER,",
				"          PROPERTY_9 = STREET,",
				"          PROPERTY_10 = CITY,",
				"          PROPERTY_11 = STATE_PROVINCE,",
				"          PROPERTY_12 = ZIP_CODE,",
				"          PROPERTY_13 = COUNTRY,",
				"          PROPERTY_14 = NOTE,",
				"          PROPERTY_15 = ALIAS_NAME,",
				"          PROPERTY_16 = ALIAS_NOTE,",
				"          PROPERTY_17 = CITY_OF_BIRTH,",
				"          PROPERTY_18 = COUNTRY_OF_BIRTH,",
				"          PROPERTY_19 = DATE_OF_BIRTH,",
				"          PROPERTY_20 = QUALITY,",
				"          PROPERTY_21 = DATE,",
				"          PROPERTY_22 = FROM_YEAR,",
				"          PROPERTY_23 = TO_YEAR,",
				"          PROPERTY_24 = TYPE_OF_DATE,",
				"          PROPERTY_25 = YEAR,",
				"          PROPERTY_26 = DOB_NOTE,",
				"          PROPERTY_27 = TYPE_OF_DOCUMENT,",
				"          PROPERTY_28 = TYPE_OF_DOCUMENT2,",
				"          PROPERTY_29 = NUMBER,",
				"          PROPERTY_30 = DATE_OF_ISSUE,",
				"          PROPERTY_31 = CITY_OF_ISSUE,",
				"          PROPERTY_32 = COUNTRY_OF_ISSUE,",
				"          PROPERTY_33 = ISSUING_COUNTRY,",
				"          PROPERTY_34 = DOCUMENT_NOTE,",
				"          PROPERTY_35 = POB_CITY,",
				"          PROPERTY_36 = POB_STATE_PROVINCE,",
				"          PROPERTY_37 = POB_COUNTRY,",
				"          PROPERTY_38 = POB_NOTE,",
				"          PROPERTY_39 = LAST_DAY_UPDATED,",
				"          PROPERTY_40 = LISTED_ON,",
				"          PROPERTY_41 = LIST_TYPE,",
				"          PROPERTY_42 = NAME_ORIGINAL_SCRIPT,",
				"          PROPERTY_43 = NATIONALITY,",
				"          PROPERTY_44 = REFERENCE_NUMBER,",
				"          PROPERTY_45 = SORT_KEY,",
				"          PROPERTY_46 = SORT_KEY_LAST_MOD,",
				"          PROPERTY_47 = SUBMITTED_BY,",
				"          PROPERTY_48 = TITLE,",
				"          PROPERTY_49 = UN_LIST_TYPE,",
				"          PROPERTY_50 = VERSIONNUM",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkXMLIndividual"
			]
		}
	}
}